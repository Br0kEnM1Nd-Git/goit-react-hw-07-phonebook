{"version":3,"file":"static/js/655.adb94972.chunk.js","mappings":"gLAGA,MAcA,EAdqBA,IAAuC,IAApCC,SAAS,GAAEC,EAAE,KAAEC,EAAI,MAAEC,IAASJ,EACpD,MAAMK,GAAWC,EAAAA,EAAAA,MAGjB,OACEC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CACGL,EAAK,KAAGC,MAEXK,EAAAA,EAAAA,KAAA,UAAQC,QAPUC,IAAMN,GAASO,EAAAA,EAAAA,IAAmBV,IAOrBM,SAAC,aAC7B,E,sBCJF,MAAMK,EAAgBA,KAC3B,MAAMC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC9BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE1B,OACEX,EAAAA,EAAAA,KAAA,OAAKY,UAAWC,EAAAA,EAAAA,aAAoBd,SACjCS,GACCR,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACDW,GACFV,EAAAA,EAAAA,KAAA,KAAAD,SAAIW,IAEJL,EAAgBS,KAAItB,IACXQ,EAAAA,EAAAA,KAACe,EAAY,CAACvB,QAASA,GAAcA,EAAQC,OAGpD,C,oECvBV,MAQA,EARiBuB,KAEbhB,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACI,EAAAA,EAAa,K,0ECHpB,MAEMa,EAAiBC,GAASA,EAAMC,SAEhCZ,GAAwBa,EAAAA,EAAAA,IAC5B,CAACH,EALkBC,GAASA,EAAMG,SAMlC,CAAA9B,EAAe8B,KAAM,IAApB,SAAEF,GAAU5B,EAAA,OACX4B,EAASE,QAAOC,IAAsB,IAArB,KAAE5B,EAAI,MAAEC,GAAO2B,EAC9B,OAAID,IAEA3B,EAAK6B,cAAcC,SAASH,EAAOE,gBACnC5B,EAAM6B,SAASH,GAGR,GACX,IAGAZ,EAA0BS,GAASA,EAAMC,SAASX,UAElDG,EAAsBO,GAASA,EAAMC,SAAST,K,iCCrBpD,SAAgB,WAAa,8BAA8B,aAAe,gC","sources":["components/PhonebookList/ContactsItem.jsx","components/PhonebookList/PhonebookList.jsx","pages/Contacts/index.jsx","store/selectors.js","webpack://react-homework-template/./src/components/PhonebookList/Phonebook.module.scss?2088"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'store/contactsSlice';\n\nconst ContactsItem = ({ contact: { id, name, phone } }) => {\n  const dispatch = useDispatch();\n  const deleteContact = () => dispatch(deleteContactThunk(id));\n\n  return (\n    <li>\n      <span>\n        {name}: {phone}\n      </span>\n      <button onClick={deleteContact}>Delete</button>\n    </li>\n  );\n};\n\nexport default ContactsItem;\n","import { useSelector } from 'react-redux';\nimport ContactsItem from './ContactsItem';\nimport {\n  selectErrorContacts,\n  selectIsLoadingContacts,\n  selectVisibleContacts,\n} from 'store/selectors';\nimport styles from './Phonebook.module.scss';\n\nexport const PhonebookList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoadingContacts);\n  const error = useSelector(selectErrorContacts);\n\n  return (\n    <div className={styles.contactsList}>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : error ? (\n        <p>{error}</p>\n      ) : (\n        visibleContacts.map(contact => {\n          return <ContactsItem contact={contact} key={contact.id} />;\n        })\n      )}\n    </div>\n  );\n};\n","import { PhonebookList } from 'components/PhonebookList/PhonebookList';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <PhonebookList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectFilter = state => state.filter;\n\nconst selectContacts = state => state.contacts;\n\nconst selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  ({ contacts }, filter) =>\n    contacts.filter(({ name, phone }) => {\n      if (filter) {\n        return (\n          name.toLowerCase().includes(filter.toLowerCase()) ||\n          phone.includes(filter)\n        );\n      }\n      return true;\n    })\n);\n\nconst selectIsLoadingContacts = state => state.contacts.isLoading;\n\nconst selectErrorContacts = state => state.contacts.error;\n\nexport {\n  selectFilter,\n  selectContacts,\n  selectVisibleContacts,\n  selectErrorContacts,\n  selectIsLoadingContacts,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterForm\":\"Phonebook_filterForm__X+vXc\",\"contactsList\":\"Phonebook_contactsList__CiGrI\"};"],"names":["_ref","contact","id","name","phone","dispatch","useDispatch","_jsxs","children","_jsx","onClick","deleteContact","deleteContactThunk","PhonebookList","visibleContacts","useSelector","selectVisibleContacts","isLoading","selectIsLoadingContacts","error","selectErrorContacts","className","styles","map","ContactsItem","Contacts","selectContacts","state","contacts","createSelector","filter","_ref2","toLowerCase","includes"],"sourceRoot":""}